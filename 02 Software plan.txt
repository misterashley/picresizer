Components

Graphical User interface (GUIgoodness.py)
- Simple GUI
    - File selector and each option laid out in order of this document
    - Progress bar and progress text field
    - (Stretch goal) Show the list of selected files
        - Each file is verified as a valid input image format
        - Show a plan based on the selected options
        - Completed conversion notation
- File selector
    - Choose a folder
        - Option to delve into subfolders
    - Choose a file
- Options (set globally)
    - Maximum desired output image dimension (Desired ratio is a function of max output)
    - Minimum desired output image dimensions
    - Resize images
    - Canvas enabled
    - Canvas colour ? (Hex value, colour wheel perhaps)
    - Compression enabled / percent
    - Strip EXIF data to shrink filesize
    - Convert to .JPG
        - Delete original image upon successful conversion
    - Preserve .PNG images in that format
    - Debug to console

Image scan & planned work  (scanNplan.py)
    - Review file, files, folder, or folders. Every file is returned as a VFO entry (validated file, and options), including invalid files.
    - The list of returned entries is the basis for the werkwerkwerk module.
    - (Stretch goal) Show what work is to be done


Work execution  (werkwerkwerk.py)
    - For each VFO entry perform work based on configuration
        - Enlarge
        - Shrink
        - Canvas (plus colour?)
        - Preserve PNG format
            -Valid input image format: PNG, output the same (canvas is currently white not transparent..)
        - Convert to JPG
            - Valid input image formats: BMP, TIFF, JPG, PNG, GIF, RAW?
            - GIF and PNG may have transparent backgrounds, convert to white and flatten
        - Delete original file

    - Pass progress updates back to GUIgoodness after each VFO entry, or set of VFO entries

Default configuration (defaults.conf)
    - Set default options
