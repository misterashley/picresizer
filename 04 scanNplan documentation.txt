We want to take a selection of file, files, folder or folders (from GUIgoodness) and return a list. If we provide a folder we can choose to go recursive or not.

We return a list of lists. Each entry is an image filename, including path, and the image's dimensions. Example: ("c:/dir/image.jpg", 1040, 800)

Returns: a list of VFO (validated files + options) entries including full file path; "in/valid image"; original dimensions; delete original file True/False; preserve PNG format True/False;

LOGIC
    For file_or_folder in passed_files:
        if file.is_file():
            VFO_Entry = checkimage(file) #dimension, imageformat
        if file.is_dir():
#           worryabout recursive directory scan later.
#           recursive_scan = False: #if recursive is not set, turn it off, your first directory is free.
            enter directory generate a new list of files, and pass to file checker and check each file.

def checkimage_dimensions(file):
    try to return: image dimension, image format
    else: "not a supported image type"



---notes---

to get path.
from pathlib import Path
p = Path('docs')

for child in p.iterdir(): child.is_file() shows true or false.

or if child.is_file(): try getting it's dimensions.



[child for child in p.iterdir() if child.is_dir()]
